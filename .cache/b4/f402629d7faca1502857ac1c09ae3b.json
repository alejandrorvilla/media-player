{"id":"assets/Proxy.js","dependencies":[{"name":"C:\\Users\\aleja\\Documents\\Open\\Cursos\\Js\\media-player\\package.json","includedInParent":true,"mtime":1665330887523}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(fibonacci);\n\nvar target = {\n  blue: 'Azul',\n  yellow: 'Amarillo',\n  red: 'Rojo',\n  green: 'Verde'\n};\nvar handler = {\n  get: function get(target, prop) {\n    if (prop in target) {\n      return target[prop];\n    }\n\n    var suggestion = Object.keys(target).find(function (key) {\n      return Levenshtein.get(prop, key) <= 3;\n    });\n    console.error(\"\".concat(prop, \" no existe. \").concat(suggestion ? \"Quisiste decir \".concat(suggestion, \"?\") : \"\"));\n    return target[prop];\n  }\n};\nvar proxy = new Proxy(target, handler);\nconsole.log(\"------ Test Proxy ------\");\nconsole.log(\"Obteniendo blue: \".concat(proxy.blue));\nconsole.log(\"Obteniendo bluw: \".concat(proxy.bluw));\nconsole.log(\"------------------------\");\n\nfunction fibonacci() {\n  var a, b;\n  return _regeneratorRuntime().wrap(function fibonacci$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          a = 1;\n          b = 1;\n\n        case 2:\n          if (!true) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 5;\n          return a;\n\n        case 5:\n          a = a + b;\n          _context.next = 8;\n          return b;\n\n        case 8:\n          b = a + b;\n          _context.next = 2;\n          break;\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":47},"source":"assets/Proxy.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":54},"source":"assets/Proxy.js","original":{"line":26,"column":10},"name":"fibonacci"},{"generated":{"line":7,"column":0},"source":"assets/Proxy.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"assets/Proxy.js","original":{"line":1,"column":6},"name":"target"},{"generated":{"line":7,"column":10},"source":"assets/Proxy.js","original":{"line":1,"column":12}},{"generated":{"line":7,"column":13},"source":"assets/Proxy.js","original":{"line":1,"column":15}},{"generated":{"line":8,"column":2},"source":"assets/Proxy.js","original":{"line":2,"column":1},"name":"blue"},{"generated":{"line":8,"column":6},"source":"assets/Proxy.js","original":{"line":2,"column":5}},{"generated":{"line":8,"column":8},"source":"assets/Proxy.js","original":{"line":2,"column":7}},{"generated":{"line":8,"column":14},"source":"assets/Proxy.js","original":{"line":1,"column":15}},{"generated":{"line":9,"column":2},"source":"assets/Proxy.js","original":{"line":3,"column":1},"name":"yellow"},{"generated":{"line":9,"column":8},"source":"assets/Proxy.js","original":{"line":3,"column":7}},{"generated":{"line":9,"column":10},"source":"assets/Proxy.js","original":{"line":3,"column":9}},{"generated":{"line":9,"column":20},"source":"assets/Proxy.js","original":{"line":1,"column":15}},{"generated":{"line":10,"column":2},"source":"assets/Proxy.js","original":{"line":4,"column":1},"name":"red"},{"generated":{"line":10,"column":5},"source":"assets/Proxy.js","original":{"line":4,"column":4}},{"generated":{"line":10,"column":7},"source":"assets/Proxy.js","original":{"line":4,"column":6}},{"generated":{"line":10,"column":13},"source":"assets/Proxy.js","original":{"line":1,"column":15}},{"generated":{"line":11,"column":2},"source":"assets/Proxy.js","original":{"line":5,"column":1},"name":"green"},{"generated":{"line":11,"column":7},"source":"assets/Proxy.js","original":{"line":5,"column":6}},{"generated":{"line":11,"column":9},"source":"assets/Proxy.js","original":{"line":5,"column":8}},{"generated":{"line":12,"column":0},"source":"assets/Proxy.js","original":{"line":1,"column":15}},{"generated":{"line":12,"column":1},"source":"assets/Proxy.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"assets/Proxy.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":4},"source":"assets/Proxy.js","original":{"line":8,"column":6},"name":"handler"},{"generated":{"line":13,"column":11},"source":"assets/Proxy.js","original":{"line":8,"column":13}},{"generated":{"line":13,"column":14},"source":"assets/Proxy.js","original":{"line":8,"column":16}},{"generated":{"line":14,"column":2},"source":"assets/Proxy.js","original":{"line":9,"column":1},"name":"get"},{"generated":{"line":14,"column":5},"source":"assets/Proxy.js","original":{"line":8,"column":16}},{"generated":{"line":14,"column":20},"source":"assets/Proxy.js","original":{"line":9,"column":5},"name":"target"},{"generated":{"line":14,"column":26},"source":"assets/Proxy.js","original":{"line":8,"column":16}},{"generated":{"line":14,"column":28},"source":"assets/Proxy.js","original":{"line":9,"column":13},"name":"prop"},{"generated":{"line":14,"column":32},"source":"assets/Proxy.js","original":{"line":8,"column":16}},{"generated":{"line":14,"column":34},"source":"assets/Proxy.js","original":{"line":9,"column":19}},{"generated":{"line":15,"column":4},"source":"assets/Proxy.js","original":{"line":10,"column":2}},{"generated":{"line":15,"column":8},"source":"assets/Proxy.js","original":{"line":10,"column":5},"name":"prop"},{"generated":{"line":15,"column":12},"source":"assets/Proxy.js","original":{"line":10,"column":9}},{"generated":{"line":15,"column":16},"source":"assets/Proxy.js","original":{"line":10,"column":13},"name":"target"},{"generated":{"line":15,"column":22},"source":"assets/Proxy.js","original":{"line":10,"column":2}},{"generated":{"line":15,"column":24},"source":"assets/Proxy.js","original":{"line":10,"column":21}},{"generated":{"line":16,"column":6},"source":"assets/Proxy.js","original":{"line":11,"column":3}},{"generated":{"line":16,"column":13},"source":"assets/Proxy.js","original":{"line":11,"column":10},"name":"target"},{"generated":{"line":16,"column":19},"source":"assets/Proxy.js","original":{"line":11,"column":16}},{"generated":{"line":16,"column":20},"source":"assets/Proxy.js","original":{"line":11,"column":17},"name":"prop"},{"generated":{"line":16,"column":24},"source":"assets/Proxy.js","original":{"line":11,"column":16}},{"generated":{"line":16,"column":25},"source":"assets/Proxy.js","original":{"line":11,"column":3}},{"generated":{"line":17,"column":4},"source":"assets/Proxy.js","original":{"line":12,"column":3}},{"generated":{"line":19,"column":4},"source":"assets/Proxy.js","original":{"line":13,"column":2}},{"generated":{"line":19,"column":8},"source":"assets/Proxy.js","original":{"line":13,"column":6},"name":"suggestion"},{"generated":{"line":19,"column":18},"source":"assets/Proxy.js","original":{"line":13,"column":16}},{"generated":{"line":19,"column":21},"source":"assets/Proxy.js","original":{"line":13,"column":19},"name":"Object"},{"generated":{"line":19,"column":27},"source":"assets/Proxy.js","original":{"line":13,"column":25}},{"generated":{"line":19,"column":28},"source":"assets/Proxy.js","original":{"line":13,"column":26},"name":"keys"},{"generated":{"line":19,"column":32},"source":"assets/Proxy.js","original":{"line":13,"column":19}},{"generated":{"line":19,"column":33},"source":"assets/Proxy.js","original":{"line":13,"column":31},"name":"target"},{"generated":{"line":19,"column":39},"source":"assets/Proxy.js","original":{"line":13,"column":19}},{"generated":{"line":19,"column":41},"source":"assets/Proxy.js","original":{"line":13,"column":39},"name":"find"},{"generated":{"line":19,"column":45},"source":"assets/Proxy.js","original":{"line":13,"column":19}},{"generated":{"line":19,"column":46},"source":"assets/Proxy.js","original":{"line":13,"column":44}},{"generated":{"line":19,"column":56},"source":"assets/Proxy.js","original":{"line":13,"column":44},"name":"key"},{"generated":{"line":19,"column":59},"source":"assets/Proxy.js","original":{"line":13,"column":47}},{"generated":{"line":20,"column":6},"source":"assets/Proxy.js","original":{"line":13,"column":47}},{"generated":{"line":20,"column":13},"source":"assets/Proxy.js","original":{"line":13,"column":51},"name":"Levenshtein"},{"generated":{"line":20,"column":24},"source":"assets/Proxy.js","original":{"line":13,"column":62}},{"generated":{"line":20,"column":25},"source":"assets/Proxy.js","original":{"line":13,"column":63},"name":"get"},{"generated":{"line":20,"column":28},"source":"assets/Proxy.js","original":{"line":13,"column":51}},{"generated":{"line":20,"column":29},"source":"assets/Proxy.js","original":{"line":13,"column":67},"name":"prop"},{"generated":{"line":20,"column":33},"source":"assets/Proxy.js","original":{"line":13,"column":51}},{"generated":{"line":20,"column":35},"source":"assets/Proxy.js","original":{"line":13,"column":73},"name":"key"},{"generated":{"line":20,"column":38},"source":"assets/Proxy.js","original":{"line":13,"column":51}},{"generated":{"line":20,"column":43},"source":"assets/Proxy.js","original":{"line":13,"column":81}},{"generated":{"line":20,"column":44},"source":"assets/Proxy.js","original":{"line":13,"column":47}},{"generated":{"line":21,"column":4},"source":"assets/Proxy.js","original":{"line":13,"column":47}},{"generated":{"line":21,"column":5},"source":"assets/Proxy.js","original":{"line":13,"column":19}},{"generated":{"line":21,"column":6},"source":"assets/Proxy.js","original":{"line":13,"column":2}},{"generated":{"line":22,"column":4},"source":"assets/Proxy.js","original":{"line":14,"column":2},"name":"console"},{"generated":{"line":22,"column":11},"source":"assets/Proxy.js","original":{"line":14,"column":9}},{"generated":{"line":22,"column":12},"source":"assets/Proxy.js","original":{"line":14,"column":10},"name":"error"},{"generated":{"line":22,"column":17},"source":"assets/Proxy.js","original":{"line":14,"column":2}},{"generated":{"line":22,"column":28},"source":"assets/Proxy.js","original":{"line":14,"column":19},"name":"prop"},{"generated":{"line":22,"column":32},"source":"assets/Proxy.js","original":{"line":14,"column":2}},{"generated":{"line":22,"column":57},"source":"assets/Proxy.js","original":{"line":14,"column":38},"name":"suggestion"},{"generated":{"line":22,"column":67},"source":"assets/Proxy.js","original":{"line":14,"column":48}},{"generated":{"line":22,"column":95},"source":"assets/Proxy.js","original":{"line":14,"column":69},"name":"suggestion"},{"generated":{"line":22,"column":105},"source":"assets/Proxy.js","original":{"line":14,"column":48}},{"generated":{"line":22,"column":114},"source":"assets/Proxy.js","original":{"line":14,"column":84}},{"generated":{"line":22,"column":116},"source":"assets/Proxy.js","original":{"line":14,"column":2}},{"generated":{"line":23,"column":4},"source":"assets/Proxy.js","original":{"line":15,"column":2}},{"generated":{"line":23,"column":11},"source":"assets/Proxy.js","original":{"line":15,"column":9},"name":"target"},{"generated":{"line":23,"column":17},"source":"assets/Proxy.js","original":{"line":15,"column":15}},{"generated":{"line":23,"column":18},"source":"assets/Proxy.js","original":{"line":15,"column":16},"name":"prop"},{"generated":{"line":23,"column":22},"source":"assets/Proxy.js","original":{"line":15,"column":15}},{"generated":{"line":23,"column":23},"source":"assets/Proxy.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":2},"source":"assets/Proxy.js","original":{"line":16,"column":2}},{"generated":{"line":25,"column":0},"source":"assets/Proxy.js","original":{"line":8,"column":16}},{"generated":{"line":25,"column":1},"source":"assets/Proxy.js","original":{"line":8,"column":0}},{"generated":{"line":26,"column":0},"source":"assets/Proxy.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":4},"source":"assets/Proxy.js","original":{"line":19,"column":6},"name":"proxy"},{"generated":{"line":26,"column":9},"source":"assets/Proxy.js","original":{"line":19,"column":11}},{"generated":{"line":26,"column":12},"source":"assets/Proxy.js","original":{"line":19,"column":14}},{"generated":{"line":26,"column":16},"source":"assets/Proxy.js","original":{"line":19,"column":18},"name":"Proxy"},{"generated":{"line":26,"column":21},"source":"assets/Proxy.js","original":{"line":19,"column":14}},{"generated":{"line":26,"column":22},"source":"assets/Proxy.js","original":{"line":19,"column":24},"name":"target"},{"generated":{"line":26,"column":28},"source":"assets/Proxy.js","original":{"line":19,"column":14}},{"generated":{"line":26,"column":30},"source":"assets/Proxy.js","original":{"line":19,"column":32},"name":"handler"},{"generated":{"line":26,"column":37},"source":"assets/Proxy.js","original":{"line":19,"column":14}},{"generated":{"line":26,"column":38},"source":"assets/Proxy.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"assets/Proxy.js","original":{"line":21,"column":0},"name":"console"},{"generated":{"line":27,"column":7},"source":"assets/Proxy.js","original":{"line":21,"column":7}},{"generated":{"line":27,"column":8},"source":"assets/Proxy.js","original":{"line":21,"column":8},"name":"log"},{"generated":{"line":27,"column":11},"source":"assets/Proxy.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":12},"source":"assets/Proxy.js","original":{"line":21,"column":12}},{"generated":{"line":27,"column":38},"source":"assets/Proxy.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"assets/Proxy.js","original":{"line":22,"column":0},"name":"console"},{"generated":{"line":28,"column":7},"source":"assets/Proxy.js","original":{"line":22,"column":7}},{"generated":{"line":28,"column":8},"source":"assets/Proxy.js","original":{"line":22,"column":8},"name":"log"},{"generated":{"line":28,"column":11},"source":"assets/Proxy.js","original":{"line":22,"column":0}},{"generated":{"line":28,"column":39},"source":"assets/Proxy.js","original":{"line":22,"column":32},"name":"proxy"},{"generated":{"line":28,"column":44},"source":"assets/Proxy.js","original":{"line":22,"column":37}},{"generated":{"line":28,"column":45},"source":"assets/Proxy.js","original":{"line":22,"column":38},"name":"blue"},{"generated":{"line":28,"column":49},"source":"assets/Proxy.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"assets/Proxy.js","original":{"line":23,"column":0},"name":"console"},{"generated":{"line":29,"column":7},"source":"assets/Proxy.js","original":{"line":23,"column":7}},{"generated":{"line":29,"column":8},"source":"assets/Proxy.js","original":{"line":23,"column":8},"name":"log"},{"generated":{"line":29,"column":11},"source":"assets/Proxy.js","original":{"line":23,"column":0}},{"generated":{"line":29,"column":39},"source":"assets/Proxy.js","original":{"line":23,"column":32},"name":"proxy"},{"generated":{"line":29,"column":44},"source":"assets/Proxy.js","original":{"line":23,"column":37}},{"generated":{"line":29,"column":45},"source":"assets/Proxy.js","original":{"line":23,"column":38},"name":"bluw"},{"generated":{"line":29,"column":49},"source":"assets/Proxy.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"assets/Proxy.js","original":{"line":24,"column":0},"name":"console"},{"generated":{"line":30,"column":7},"source":"assets/Proxy.js","original":{"line":24,"column":7}},{"generated":{"line":30,"column":8},"source":"assets/Proxy.js","original":{"line":24,"column":8},"name":"log"},{"generated":{"line":30,"column":11},"source":"assets/Proxy.js","original":{"line":24,"column":0}},{"generated":{"line":30,"column":12},"source":"assets/Proxy.js","original":{"line":24,"column":12}},{"generated":{"line":30,"column":38},"source":"assets/Proxy.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":32,"column":9},"source":"assets/Proxy.js","original":{"line":26,"column":10},"name":"fibonacci"},{"generated":{"line":32,"column":18},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":2},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":2},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":4},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":6},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":37,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":10},"source":"assets/Proxy.js","original":{"line":27,"column":5},"name":"a"},{"generated":{"line":38,"column":11},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":14},"source":"assets/Proxy.js","original":{"line":27,"column":9}},{"generated":{"line":38,"column":15},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":10},"source":"assets/Proxy.js","original":{"line":28,"column":5},"name":"b"},{"generated":{"line":39,"column":11},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":14},"source":"assets/Proxy.js","original":{"line":28,"column":9}},{"generated":{"line":39,"column":15},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":41,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":42,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":42,"column":15},"source":"assets/Proxy.js","original":{"line":29,"column":7}},{"generated":{"line":42,"column":19},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":43,"column":12},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":44,"column":12},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":45,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":47,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":48,"column":10},"source":"assets/Proxy.js","original":{"line":30,"column":2}},{"generated":{"line":48,"column":17},"source":"assets/Proxy.js","original":{"line":30,"column":8},"name":"a"},{"generated":{"line":48,"column":18},"source":"assets/Proxy.js","original":{"line":30,"column":2}},{"generated":{"line":50,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":51,"column":10},"source":"assets/Proxy.js","original":{"line":31,"column":2},"name":"a"},{"generated":{"line":51,"column":11},"source":"assets/Proxy.js","original":{"line":31,"column":3}},{"generated":{"line":51,"column":14},"source":"assets/Proxy.js","original":{"line":31,"column":6},"name":"a"},{"generated":{"line":51,"column":15},"source":"assets/Proxy.js","original":{"line":31,"column":7}},{"generated":{"line":51,"column":18},"source":"assets/Proxy.js","original":{"line":31,"column":10},"name":"b"},{"generated":{"line":51,"column":19},"source":"assets/Proxy.js","original":{"line":31,"column":2}},{"generated":{"line":52,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":53,"column":10},"source":"assets/Proxy.js","original":{"line":32,"column":2}},{"generated":{"line":53,"column":17},"source":"assets/Proxy.js","original":{"line":32,"column":8},"name":"b"},{"generated":{"line":53,"column":18},"source":"assets/Proxy.js","original":{"line":32,"column":2}},{"generated":{"line":55,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":56,"column":10},"source":"assets/Proxy.js","original":{"line":33,"column":2},"name":"b"},{"generated":{"line":56,"column":11},"source":"assets/Proxy.js","original":{"line":33,"column":3}},{"generated":{"line":56,"column":14},"source":"assets/Proxy.js","original":{"line":33,"column":6},"name":"a"},{"generated":{"line":56,"column":15},"source":"assets/Proxy.js","original":{"line":33,"column":7}},{"generated":{"line":56,"column":18},"source":"assets/Proxy.js","original":{"line":33,"column":10},"name":"b"},{"generated":{"line":56,"column":19},"source":"assets/Proxy.js","original":{"line":33,"column":2}},{"generated":{"line":57,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":58,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":60,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":61,"column":8},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":62,"column":10},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":63,"column":6},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":64,"column":4},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":65,"column":2},"source":"assets/Proxy.js","original":{"line":26,"column":0}},{"generated":{"line":66,"column":0},"source":"assets/Proxy.js","original":{"line":26,"column":0}}],"sources":{"assets/Proxy.js":"const target = {\r\n\tblue: 'Azul',\r\n\tyellow: 'Amarillo',\r\n\tred: 'Rojo',\r\n\tgreen: 'Verde'\r\n}\r\n\r\nconst handler = {\r\n\tget(target, prop) {\r\n\t\tif(prop in target) {\r\n\t\t\treturn target[prop];\r\n\t\t}\r\n\t\tlet suggestion = Object.keys(target).find(key => Levenshtein.get(prop, key) <= 3);\r\n\t\tconsole.error(`${prop} no existe. ${suggestion ? `Quisiste decir ${suggestion}?`: \"\"}`);\r\n\t\treturn target[prop];\r\n\t}\r\n}\r\n\r\nconst proxy = new Proxy(target, handler);\r\n\r\nconsole.log(\"------ Test Proxy ------\");\r\nconsole.log(`Obteniendo blue: ${proxy.blue}`);\r\nconsole.log(`Obteniendo bluw: ${proxy.bluw}`);\r\nconsole.log(\"------------------------\");\r\n\r\nfunction* fibonacci() {\r\n\tlet a = 1;\r\n\tlet b = 1;\r\n\twhile(true) {\r\n\t\tyield a;\r\n\t\ta = a + b;\r\n\t\tyield b;\r\n\t\tb = a + b;\r\n\t}\r\n}"},"lineCount":null}},"error":null,"hash":"8b86f1507b0936c7d5be1540c9aa7b8c","cacheData":{"env":{}}}